{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1xQ0kFlFxSX4oC0lsAhpxRaMKQhZ-9bXi","timestamp":1691224142490},{"file_id":"1nKURT62iOpO3o2kZ4xpZ-F8UXFfs17QE","timestamp":1691223598575}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"B6fhulacqn32"},"outputs":[],"source":["# import torch\n","import pandas as pd\n","import seaborn\n","import numpy as np"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dRK3i90hrQyJ","executionInfo":{"status":"ok","timestamp":1691254559085,"user_tz":-360,"elapsed":5496,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"0e529f3d-e00c-42d2-e8cf-7480445cab3f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["train_data = pd.read_csv('/content/gdrive/MyDrive/CSE427/CSE427 Lab/Lab3/train.csv')\n","train_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"8GUVmFUGsS4s","executionInfo":{"status":"ok","timestamp":1691254559087,"user_tz":-360,"elapsed":38,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"8dd2f964-9f04-46aa-a1f2-90b02482698f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ID     crim    zn  indus  chas    nox     rm   age     dis  rad  tax  \\\n","0   1  0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296   \n","1   2  0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242   \n","2   4  0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222   \n","3   5  0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222   \n","4   7  0.08829  12.5   7.87     0  0.524  6.012  66.6  5.5605    5  311   \n","\n","   ptratio   black  lstat  medv  \n","0     15.3  396.90   4.98  24.0  \n","1     17.8  396.90   9.14  21.6  \n","2     18.7  394.63   2.94  33.4  \n","3     18.7  396.90   5.33  36.2  \n","4     15.2  395.60  12.43  22.9  "],"text/html":["\n","\n","  <div id=\"df-99db5ad2-bc98-4b6b-9fb3-2f73038a8f66\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>black</th>\n","      <th>lstat</th>\n","      <th>medv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7</td>\n","      <td>0.08829</td>\n","      <td>12.5</td>\n","      <td>7.87</td>\n","      <td>0</td>\n","      <td>0.524</td>\n","      <td>6.012</td>\n","      <td>66.6</td>\n","      <td>5.5605</td>\n","      <td>5</td>\n","      <td>311</td>\n","      <td>15.2</td>\n","      <td>395.60</td>\n","      <td>12.43</td>\n","      <td>22.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99db5ad2-bc98-4b6b-9fb3-2f73038a8f66')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9e456dd4-d560-4136-a868-33eedca94e09\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e456dd4-d560-4136-a868-33eedca94e09')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9e456dd4-d560-4136-a868-33eedca94e09 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-99db5ad2-bc98-4b6b-9fb3-2f73038a8f66 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-99db5ad2-bc98-4b6b-9fb3-2f73038a8f66');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":298}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"CHl5Z1w21Amt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1691254563561,"user_tz":-360,"elapsed":4507,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"8de0cea9-b81f-4ab0-c937-22d4563864e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["seaborn.heatmap(train_data.isnull(), cmap = 'viridis')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"zlYZUOeGtDbr","executionInfo":{"status":"ok","timestamp":1691254564397,"user_tz":-360,"elapsed":863,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"447401cd-cdc4-4f73-b1d9-ed2739e91307"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":300},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#columns = ['ID',\t'crim',\t'zn'\t,'indus',\t'chas'\t, 'nox\trm\tage\tdis\trad\ttax\tptratio\tblack\tlstat\tmedv]\n","target = train_data['medv']\n","train_data = train_data.drop(['ID', 'medv'], axis = 1)\n","\n","# train = torch.from_numpy(train)"],"metadata":{"id":"wnDUhZoJuUPD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chas1 = pd.get_dummies(train_data['chas'])\n","train_data.drop([ 'chas'], axis = 1, inplace = True)\n","train_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9Kngu8aP8dFT","executionInfo":{"status":"ok","timestamp":1691254564400,"user_tz":-360,"elapsed":28,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"46bcca33-4847-4df8-bbcb-c7a9e5ac1e08"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      crim    zn  indus    nox     rm   age     dis  rad  tax  ptratio  \\\n","0  0.00632  18.0   2.31  0.538  6.575  65.2  4.0900    1  296     15.3   \n","1  0.02731   0.0   7.07  0.469  6.421  78.9  4.9671    2  242     17.8   \n","2  0.03237   0.0   2.18  0.458  6.998  45.8  6.0622    3  222     18.7   \n","3  0.06905   0.0   2.18  0.458  7.147  54.2  6.0622    3  222     18.7   \n","4  0.08829  12.5   7.87  0.524  6.012  66.6  5.5605    5  311     15.2   \n","\n","    black  lstat  \n","0  396.90   4.98  \n","1  396.90   9.14  \n","2  394.63   2.94  \n","3  396.90   5.33  \n","4  395.60  12.43  "],"text/html":["\n","\n","  <div id=\"df-acb65d78-e843-4054-ab2f-6ac6f406d117\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>black</th>\n","      <th>lstat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.08829</td>\n","      <td>12.5</td>\n","      <td>7.87</td>\n","      <td>0.524</td>\n","      <td>6.012</td>\n","      <td>66.6</td>\n","      <td>5.5605</td>\n","      <td>5</td>\n","      <td>311</td>\n","      <td>15.2</td>\n","      <td>395.60</td>\n","      <td>12.43</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acb65d78-e843-4054-ab2f-6ac6f406d117')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4e5a4282-c051-4943-8d9a-70aa4e939428\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e5a4282-c051-4943-8d9a-70aa4e939428')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4e5a4282-c051-4943-8d9a-70aa4e939428 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-acb65d78-e843-4054-ab2f-6ac6f406d117 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-acb65d78-e843-4054-ab2f-6ac6f406d117');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":302}]},{"cell_type":"code","source":["train_data = pd.concat([train_data, chas1], axis = 1)\n","train_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"p1Ifn796-YOO","executionInfo":{"status":"ok","timestamp":1691254564402,"user_tz":-360,"elapsed":28,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"3d974f4a-0ca2-4f35-d086-505ed051b495"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      crim    zn  indus    nox     rm   age     dis  rad  tax  ptratio  \\\n","0  0.00632  18.0   2.31  0.538  6.575  65.2  4.0900    1  296     15.3   \n","1  0.02731   0.0   7.07  0.469  6.421  78.9  4.9671    2  242     17.8   \n","2  0.03237   0.0   2.18  0.458  6.998  45.8  6.0622    3  222     18.7   \n","3  0.06905   0.0   2.18  0.458  7.147  54.2  6.0622    3  222     18.7   \n","4  0.08829  12.5   7.87  0.524  6.012  66.6  5.5605    5  311     15.2   \n","\n","    black  lstat  0  1  \n","0  396.90   4.98  1  0  \n","1  396.90   9.14  1  0  \n","2  394.63   2.94  1  0  \n","3  396.90   5.33  1  0  \n","4  395.60  12.43  1  0  "],"text/html":["\n","\n","  <div id=\"df-c8b07ec9-b71e-4d5a-8f8b-01656e2ad382\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>black</th>\n","      <th>lstat</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.08829</td>\n","      <td>12.5</td>\n","      <td>7.87</td>\n","      <td>0.524</td>\n","      <td>6.012</td>\n","      <td>66.6</td>\n","      <td>5.5605</td>\n","      <td>5</td>\n","      <td>311</td>\n","      <td>15.2</td>\n","      <td>395.60</td>\n","      <td>12.43</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c8b07ec9-b71e-4d5a-8f8b-01656e2ad382')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-32657a2f-596a-41e3-9965-e1f96119bd0f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32657a2f-596a-41e3-9965-e1f96119bd0f')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-32657a2f-596a-41e3-9965-e1f96119bd0f button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c8b07ec9-b71e-4d5a-8f8b-01656e2ad382 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c8b07ec9-b71e-4d5a-8f8b-01656e2ad382');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":303}]},{"cell_type":"code","source":["train = train_data.to_numpy()\n","row,column = train.shape"],"metadata":{"id":"oqSFpWI7ErB7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def centralize(x):\n","  mean = np.mean(x)\n","  stddev = np.std(x)\n","  x = (x - mean)/stddev\n","  return x"],"metadata":{"id":"WxLZamnAwZoU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for col in range(column):\n","  train[:, col] = centralize(train[:, col])"],"metadata":{"id":"sy9Ki0Ywxxrt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Zcl8Gm6xJpo","executionInfo":{"status":"ok","timestamp":1691254564836,"user_tz":-360,"elapsed":9,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"86ff8e4a-e47f-4149-ee84-493c78d612c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.45687496,  0.32290583, -1.28563081, -0.16678732,  0.44015381,\n","        -0.10773625,  0.1921326 , -0.98907045, -0.66406247, -1.46517068,\n","         0.43298984, -1.06777158,  0.25278007, -0.25278007],\n","       [-0.45401577, -0.47212294, -0.60442483, -0.76792805,  0.22105954,\n","         0.37996323,  0.63552754, -0.87451029, -0.98061968, -0.30161579,\n","         0.43298984, -0.47829937,  0.25278007, -0.25278007],\n","       [-0.45332651, -0.47212294, -1.30423517, -0.86376208,  1.04195169,\n","        -0.79834719,  1.18912668, -0.75995013, -1.0978631 ,  0.11726397,\n","         0.40673324, -1.35683968,  0.25278007, -0.25278007],\n","       [-0.44833006, -0.47212294, -1.30423517, -0.86376208,  1.25393251,\n","        -0.49931977,  1.18912668, -0.75995013, -1.0978631 ,  0.11726397,\n","         0.43298984, -1.01817656,  0.25278007, -0.25278007],\n","       [-0.44570925,  0.07998037, -0.48993643, -0.2887579 , -0.36082068,\n","        -0.05789834,  0.93550538, -0.53082981, -0.57612991, -1.51171288,\n","         0.41795302, -0.01210621,  0.25278007, -0.25278007]])"]},"metadata":{},"execution_count":307}]},{"cell_type":"code","source":["W = np.zeros(shape=(column+1))\n","a = np.ones(shape=(row))\n","X = np.c_[train,a]\n","Y = target\n","J = 0\n","l_rate = 0.1\n","\n","for j in range(50):\n","\n","    for k in range(0,column+1) :\n","\n","        Y_ = np.matmul(X,W)\n","        dj1 = 0\n","        dj2 = 0\n","        J1 = 0\n","        J2 = 0\n","        J = 0\n","\n","        if (k != column-1)   :\n","            for p in range(0,row) :\n","                J += (Y[p] - Y_[p])**2\n","                dj1 += 2*(Y[p]-Y_[p])*(-X[p][k])\n","            dj1_ = dj1/row\n","            W[k] = W[k] - (l_rate*dj1_)\n","            J = J/row\n","\n","        if (k == column) :\n","            for q in range(0,row) :\n","                J += (Y[q] - Y_[q])**2\n","                dj2 += 2*(Y[q]-Y_[q])*(-1)\n","\n","            dj2_ = dj2/row\n","            W[k] = W[k] - (l_rate*dj1_)\n","            J = J/row\n","\n","    if j in [9,19,29,39,49] :\n","        print(f\"{j} : {J}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fn4RBrhFiHkf","executionInfo":{"status":"ok","timestamp":1691254566281,"user_tz":-360,"elapsed":1452,"user":{"displayName":"ANIKA ISLAM","userId":"00934771843233001684"}},"outputId":"8771ded2-ca87-4d41-bdbd-eaa5d668006d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["9 : 24.785560870486645\n","19 : 23.381888712289136\n","29 : 22.97563510793191\n","39 : 22.785858896762157\n","49 : 22.67956514438034\n"]}]}]}